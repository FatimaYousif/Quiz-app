{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","option","option1","option2","inputFields","setInputFields","add","map","inputField","i","className","placeholder","name","value","disabled","selected","type","href","onClick","index","values","splice","subtract","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NA0DeA,MApDf,WAAgB,IAAD,EAEyBC,mBAAS,CACzC,CAAEC,OAAQ,GAAIC,QAAS,GAAIC,QAAQ,MAH5B,mBAENC,EAFM,KAEOC,EAFP,KAMT,SAASC,IAEbD,EAAe,GAAD,mBAAKD,GAAL,CAAkB,CAAGH,OAAQ,GAAIC,QAAS,GAAIC,QAAQ,OAStE,OACEC,EAAYG,KAAI,SAACC,EAAWC,GAAZ,OAElB,sBAAKC,UAAU,MAAf,UAEA,uBAAOA,UAAU,KAAIC,YAAY,kCAEjC,sBAAKD,UAAU,aAAf,UAEA,qBAAKA,UAAU,SAAf,SACA,yBAAQE,KAAK,KAAb,UACA,wBAAQC,MAAM,GAAGC,UAAQ,EAACC,UAAQ,EAAlC,0BACA,wBAAQF,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,0BAIA,sBAAKH,UAAU,UAAf,UACA,uBAAOC,YAAY,UAAUK,KAAK,SAClC,uBACA,uBAAOL,YAAY,UAAUK,KAAK,SAClC,uBAEA,mBAAGC,KAAK,GAAR,2BAGA,wBAAQP,UAAU,MAAKQ,QAASZ,EAAhC,SAAqC,cAAC,IAAD,MACrC,wBAAQI,UAAU,QAAOQ,QAAS,kBAjClC,SAAkBC,GAEhB,IAAMC,EAAM,YAAQhB,GAChBgB,EAAOC,OAAOF,EAAO,GACrBd,EAAee,GA6BiBE,CAASb,IAA/C,SAAmD,cAAC,IAAD,gBCtCpCc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5d311a24.chunk.js","sourcesContent":["\nimport React,{useState} from 'react'\nimport './style.css';\nimport { FaTrash, FaPlus} from \"react-icons/fa\";\n\n\nfunction App() {\n\n  const [inputFields, setInputFields] = useState([\n        { option: '', option1: '', option2:'' },\n      ]);\n\n      function add()\n{\n  setInputFields([...inputFields, {  option: '', option1: '', option2:'' }])\n}\n\nfunction subtract(index)\n{\n  const values  = [...inputFields];\n      values.splice(index, 1);\n      setInputFields(values);}\n    \nreturn(\n  inputFields.map((inputField,i)=> (\n  \n<div className=\"div\">\n\n<input className=\"qs\"placeholder=\"question will be typed here  \"/>\n\n<div className=\"container2\">\n\n<div className=\"choice\">\n<select name=\"q1\" >\n<option value=\"\" disabled selected>Multi-choice</option>\n<option value=\"option1\">option1</option>\n<option value=\"option2\">option2</option>\n</select>\n</div>\n\n<div className=\"options\">\n<input placeholder=\"option1\" type=\"text\"/>\n<br/>\n<input placeholder=\"option2\" type=\"text\"/>\n<br/>\n\n<a href=\"\">add option</a>\n</div>\n{/* </div> */}\n<button className=\"add\"onClick={add}><FaPlus /></button>\n<button className=\"trash\"onClick={()=>subtract(i)}><FaTrash /></button>\n</div>\n</div>\n\n    ))\n);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}